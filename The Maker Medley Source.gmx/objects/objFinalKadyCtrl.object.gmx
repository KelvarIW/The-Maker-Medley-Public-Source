<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprTriggerMask</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>110</depth>
  <persistent>0</persistent>
  <parentName>objAvoPar</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Call parent event
event_inherited();

//Overwrite parent defaults
startTime = 36;
endTime = 595;
bgmSource = global.BGMBoss4Avo1;

usePracticeSystem = false; //this is part of a larger fight
active = true;
//Specific
movementTimer = 0;
rise = 0;
instance_create(0, 0, objFinalKadyRainbow);

drawXOff = 0;
drawYOff = 0;
glowSurf = -4;
glowAlpha = 0;
backGlow = 0;
backGlowAng = -pi/2;
backScaleMult = 1;
scrFinalUpdateFarthest();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (surface_exists(glowSurf))
    surface_free(glowSurf);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stop moving the middle block
with (objFinalBossChar_1){
    vspeed = 16;
    trailPieceMax = trailPieceMaxInit;
    trailPieces = trailPieceMax;
    for (var i=trailPieces-1; i &gt; 0; i--){
        trailX[i] = -2000;
        trailY[i] = -2000;
        trailScale[i] = 0;
    }
}
with (objFinalP1Tiles){
    if (!destroyed){
        vspeed = 0;
    }
}
with (objBetterBlock){
    vspeed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (alarm[0] &gt; 0 &amp;&amp; global.deathSlow &lt; 1){
    event_perform(ev_alarm, 0);
}

backGlowAng += pi/40;
backGlow = (sin(backGlowAng)/2 + 0.5);
if (backScaleMult &lt; 1){
    backScaleMult = min(backScaleMult+0.025, 1);
}

// scrFinalCalcGlowAlpha(0.05, 0.1);  // not visible anyways

if (timer &gt;= 60 &amp;&amp; (movementTimer &lt; 20 || global.dead || timer &gt;= 600) &amp;&amp; movementTimer &gt; -10){
    if (global.dead || timer &gt;= 600){
        movementTimer -= 0.25
    }else{
        movementTimer ++;
    }
    ystart = lerp(608 + 140, 304, sin(pi/2 * movementTimer/20));
}
y = ystart + 10*sin(global.count * pi/60)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(timerEvent){
    case 0:
        with (objBlock){
            if (solid &amp;&amp; x == 160 &amp;&amp; y == 480){
                instance_destroy();
            }
        }
        with (objMakerReflector){
            fade = -1;
            fadeTo = 0;
        }
        break;
    case 36:
        with (objFinalP1Tiles){
            if (y &gt;= 624){
                instance_destroy();
            }else if (y == 592){
                event_user(0);
            }
        }
        with (objBetterBlock){
            image_yscale -= 1;
        }
        
        audio_stop_sound(sndMakerSamplePunch);
        var _snd = audio_play_sound(sndMakerSamplePunch, 0, 0);
        audio_sound_pitch(_snd, PITCH_FLUCT);
        
        with (objFinalBossChar_1){
            image_blend = c_white;
            trailPieceMax = 0;
        }
        
        with (objFinalBossHP){
            descend = -1;
        }
        break;
    case 40:
        with (objFinalP1Tiles){
            if (y == 560 &amp;&amp; !destroyed){
                event_user(0);
            }
        }
        with (objBetterBlock){
            image_yscale -= 1;
        }
        
        audio_stop_sound(sndMakerSamplePunch);
        var _snd = audio_play_sound(sndMakerSamplePunch, 0, 0);
        audio_sound_pitch(_snd, PITCH_FLUCT);
        break;
    case 44:
        with (objFinalP1Tiles){
            if (y == 528 &amp;&amp; !destroyed){
                event_user(0);
            }
        }
        with (objBetterBlock){
            image_yscale -= 1;
        }
        
        audio_stop_sound(sndMakerSamplePunch);
        var _snd = audio_play_sound(sndMakerSamplePunch, 0, 0);
        audio_sound_pitch(_snd, PITCH_FLUCT);
        break;
    case 60:
        x = 400;
        y = room_height + 304;
        xprevious = x;
        yprevious = y;
        nametag = scrFinalBossNametag(400, y - 108, 3);
        nametag.alphaMult = 1;
                
        with (objFinalRNGDie){
            event_user(0);  // Change target
            targetObj = other.id;
            latchedOn = true;
            grow = true;
            shrink = false;
            appearYDiff = 132;
            audio_play_sound(sndMakerParachuteLost, 0, 0);
        }
        with (objBetterBlock){
            image_yscale = 1;
        }
        break;
    case 64:
        with (objFinalBossChar_1){
            vspeed = -1; //(480-320) = 160;
        }
        with (objFinalP1Tiles){
            if (!destroyed){
                vspeed = -1;
            }
        }
        with (objBetterBlock){
            vspeed = -1;
        }
        alarm[0] = 160;
        break;
    case 593.5:
        with (objFinalKadyProj){
            nokill = true;
            alphaDec = 0.1;
        }
    case 596:
    case 598.5:
    case 600.5:
        if (global.practicing &amp;&amp; global.practiceWaypointEnd == 2){
            scrPracticeEnd();
            active = false;
        }else{
            with (instance_create(0, 0, objScreenFade)){
                color = c_white;
                fadeIn = 0.3334;
                fadeOut = fadeIn;
                alarm[0] = 4;
            }
        }
        break;
    case 604.5:
        if (!global.dead){
            persistent = true;
            with (objFinalRNGDie){
                persistent = true;
            }
            with (nametag){
                persistent = true;
            }
            with (objMakerCirclePart){
                persistent = true;
                roomStart = rFinalBoss_2;
            }
            with (objBullet){
                persistent = true;
                roomStart = rFinalBoss_2;
            }
            with (objFinalBossHP){
                persistent = true;
                descend = 1;
                roomStart = rFinalBoss_2;
            }
            room_goto(rFinalBoss_2);
        }
        break;
}
// [INEQUALITIES] \\

//Ceiling orbs
if (timerEvent &gt;= 64 &amp;&amp; timerEvent &lt; 300 &amp;&amp; timerEvent mod 2 == 0){
    var _inst;
    _inst = instance_create(random_range(32,768), -8, objFinalKadyProj);
    _inst.index = 0;
    with (_inst){
        event_user(0);
    }
}

// Top/Bottom Rounded projectiles
if (timerEvent &gt;= 199 &amp;&amp; timerEvent &lt; 593.5){
    var _delay = 3;
    if (buff()){
        _delay = 2;
    }
    // bottom (first)
    if ((timerEvent+10) &gt;= 302 &amp;&amp; (timerEvent+10) &lt; 425 &amp;&amp; (timerEvent mod _delay) == (_delay-1)){
        repeat(1){
            var _inst;
            _inst = instance_create(924, random_range(592, 544), objFinalKadyProj);
            _inst.index = 1;
            with (_inst){
                event_user(0);
            }
            
            _inst.alarm[0] = irandom_range(  max(3, 2*(332-timerEvent)), min( 768 / max(_inst.speed, 1), 2*(445-timerEvent) )  );
        }
    }else{
        repeat(1){
            var _inst;
            _inst = instance_create(832, random_range(592, 544), objFinalKadyProj);
            _inst.index = 1;
            with (_inst){
                event_user(0);
            }
        }
    }
    
    //top (second)
    if ((timerEvent+10) &gt;= 437 &amp;&amp; (timerEvent+10) &lt; 560 &amp;&amp; (timerEvent mod _delay) == (_delay-1)){
        repeat(1){
            var _inst;
            _inst = instance_create(-124, random_range(16, 64), objFinalKadyProj);
            _inst.index = 1;
            with (_inst){
                event_user(0);
            }
            
            _inst.alarm[0] = irandom_range(  max(3, 2*(467-timerEvent)), min( 768 / max(_inst.speed, 1), 2*(580-timerEvent) )  );
        }
    }else{
        repeat(1){
            var _inst;
            _inst = instance_create(-32, random_range(16, 64), objFinalKadyProj);
            _inst.index = 1;
            if (timer &gt;= 595){
                _inst.image_alpha = 1 - (timerEvent - 594.5)/5;
                _inst.alphaDec = 0.1;
            }
            with (_inst){
                event_user(0);
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!persistent){
    event_inherited();
}
if (surface_exists(glowSurf)){
    surface_free(glowSurf);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (room != rFinalBoss_2){
    instance_destroy();
}else{
    persistent = false;
    with (objMakerBossSave){
        instance_destroy();
    }
    if (instance_exists(objPlayer)){
        // Autosave FIRST - then create objFinalBossCtrl
        // Need to write Current values -&gt; Save values, then load from prev checkpoint
        // Saved values represent HP at END of phase, Current values represent HP of current phase
		
        if (!global.practicing){
            //scrFinalTransferHP(1, 0);
            //Save in the location of the save point 
            scrTMM_Autosave(400, 279, 2);
        }
        if (!instance_exists(objFinalBossCtrl)){
            instance_create(400, -120, objFinalBossCtrl);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (timer &gt; 60){
    draw_sprite_ext(sprFinalKadyCacao, global.count/5, 400  + drawXOff, y  + drawYOff, 1, 1, 0, c_gray, 1);
    
    if (global.finalGlowEnabled &amp;&amp; global.extraEffects &amp;&amp; drawXOff == 0){
        if (glowAlpha &gt; 0){
            if (!surface_exists(glowSurf))
                glowSurf = surface_create(400, 304);
            if (surface_exists(glowSurf)){
                surface_set_target(glowSurf);
                draw_clear_alpha(c_black, 0);
                draw_sprite_ext(sprFinalKadyCacao, image_index, 200, 152, 1, image_yscale, image_angle, image_blend, 1);
                surface_reset_target();
                
                if (surface_exists(glowSurf)){
                    shader_set(shdFinalWhite);
                    shader_set_uniform_f(global.finalGlowHandle, 400, 304, 10, glowAlpha*image_alpha);
                    draw_surface(glowSurf, 0, y-152); //x = 400, - 400 = 0
                    shader_reset();
                }
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
