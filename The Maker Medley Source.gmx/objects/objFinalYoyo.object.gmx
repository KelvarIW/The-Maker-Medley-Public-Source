<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprFinalYoyoMiku</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-7</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>glowAlpha = 0;
glowSurf = -4;

image_blend = c_black;
/*if (global.practicing &amp;&amp; global.practiceWaypointEnd == 3){
    instance_destroy();
}else{*/
backGlow = 0;
backGlowAng = -pi/2;
backScaleMult = 0;
laserTimer = -1;
nametag = noone;
fadeOut = false;
alarm[0] = 1;
//}
image_speed = 0;
transitionFreeze = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (surface_exists(glowSurf)){
    surface_free(glowSurf);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///initialization
if (view_xview &gt;= room_width-800 || global.roomSaveTo == 3){  // global.roomSaveTo check allows loading into room
    event_user(0);
    visible = false;
}
with (objFinalTilesAutomaticNoblock){
    event_user(1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (laserTimer &gt;= 0){
    laserTimer ++;
    if (laserTimer == 1){
        audio_play_sound(sndFinalYoyoCharge, 0, 0);
    }else if (laserTimer == 60 &amp;&amp; !global.dead){
        instance_create(x, y, objFinalYoyoLaser);
        event_user(0);
    }else if (laserTimer == 70){
        if (audio_is_playing(global.currentMusic)){
            global.musicFading = global.currentMusic;
            global.musicFadeEnd = "stop";
        }else{
            with (objWorld){
                musicToPlay = -1;
            }
        }
        global.musicFadeDec = 1/20;
    }else if (laserTimer == 130){
        instance_create((room_width-800) + 400, 256, objFinalPatCtrl);
        with (objFinalPatCtrl){
            active = true;
            autosave = true;
            /*if (!global.challengeMode){
                autosave = true;
            }*/
        }
            
    }
}

backGlowAng += pi/40;
backGlow = (sin(backGlowAng)/2 + 0.5);
if (backScaleMult &lt; 1){
    backScaleMult = min(backScaleMult+0.025, 1);
}

if (fadeOut){
    image_alpha -= 0.025;
    if (image_alpha &lt;= 0)
        instance_destroy();
}
scrFinalCalcGlowAlpha(0.05, 0.1);

if (!transitionFreeze){  image_index = (global.count / 5);  }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objBullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (visible){
    with (other){
        x = xprevious;
        y = yprevious;
        scrMoveContactObject(sign(hspeed), 0, abs(hspeed), other);
        
        var _inst;
        _inst = instance_create(x, y, objBulletReflected);
        _inst.hspeed *= sign(x-other.x);
        
        explode = false;
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objPlayer">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (visible &amp;&amp; !fadeOut)
    scrKillPlayer();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Close gate
with (objBlock){
    if (x == room_width-800 &amp;&amp; y == 0 &amp;&amp; image_xscale == 1){
        image_yscale = 19;
    }
}

/*  // We manage tile drawing in objFinalPatArena
instance_create(room_width-800 + 16, 528, objFinalTilesAutomaticNoblock);
instance_create(room_width-800 + 16, 560, objFinalTilesAutomaticNoblock);
with (objFinalTilesAutomaticNoblock){
    if ((y == 592 &amp;&amp; (x == 4784 || x == 4848)) || (x == 4816 &amp;&amp; (y == 464 || y == 496))){
        autoTiled = false
    }
    event_user(1);
}
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (surface_exists(glowSurf)){
    surface_free(glowSurf);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
if (laserTimer &gt;= 1 &amp;&amp; laserTimer &lt; 60){
    draw_sprite_ext(sprFinalYoyoCharge, clamp(floor((laserTimer-1)*0.2), 0, 3), x, y, 1 - laserTimer/60, 1 - laserTimer/60, 8*(laserTimer-1), c_white, laserTimer/60);
    draw_sprite_ext(sprFinalYoyoCharge, clamp(floor((laserTimer-1)*0.2), 0, 3), x, y, 1 - laserTimer/60, 1 - laserTimer/60, -8*(laserTimer-1), c_white, laserTimer/60);
}

if (global.finalGlowEnabled &amp;&amp; global.extraEffects){
    if (glowAlpha &gt; 0){
        if (!surface_exists(glowSurf))
            glowSurf = surface_create(512, 608);
        if (surface_exists(glowSurf)){
            surface_set_target(glowSurf);
            draw_clear_alpha(c_black, 0);
            draw_sprite_ext(sprite_index, image_index, 220, y-view_yview, image_xscale, image_yscale, image_angle, image_blend, 1);
            surface_reset_target();
            
            if (surface_exists(glowSurf)){
                shader_set(shdFinalWhite);
                shader_set_uniform_f(global.finalGlowHandle, 800, 608, 10, glowAlpha*image_alpha);
                draw_surface(glowSurf, x-220, view_yview);
                shader_reset();
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
