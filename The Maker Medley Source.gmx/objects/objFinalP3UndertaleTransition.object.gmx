<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMakerHeart</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-20</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>timer = 40;
drawHeart = false;
blackFade = -4;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Autosave
if (instance_exists(objFinalBossHP)){
    with (objFinalBossHP){yPosLerp = 1;}
}

if (!global.practicing){
    //scrFinalTransferHP(3, 2);
    //Save in the location of the save point 
    scrTMM_Autosave(x, y, 4);
    scrFinalUpdateFarthest();
}
if (!instance_exists(objFinalBossCtrl)){
    instance_create(400, -120, objFinalBossCtrl);
}

with (objFinalBossHP){
    currentHPVal = 3;
    roomStart = room;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Battle start sound effect
audio_play_sound(sndFinalUndertaleBattle, 0, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>timer ++;
if (timer &gt; 67){
    x = lerp(xstart, 400, (timer-67)/18);
    y = lerp(ystart, 472, (timer-67)/18);
}

switch (timer){
    case 51:
    case 57:
    case 63:
        drawHeart = true;
        audio_stop_sound(sndMakerSampleBell);
        audio_play_sound(sndFinalUndertaleNoise, 0, 0);
        break;
    case 54:
    case 60:
        drawHeart = false;
        break;
    case 67:
        instance_destroy(objFakePlayer);
        alarm[0] = 1; // Need to play sound after the RoomSounds audio group is stopped
        if (room == rFinalBoss_3){
            blackFade = instance_create(0, 0, objScreenFade)
            with (blackFade){
                alpha = 1;
                fade = 0;
                color = c_black;
                fadeOut = 1/10;
                depth = -20;
            }
        }else{
            persistent = true;
            xstart -= view_xview;
            ystart -= view_yview;
            with (objFinalBossHP){
                persistent = true;
            }
            with (objFinalRNGDie){
                x -= view_xview;
                y -= view_xview;
                persistent = true;
            }
            room_goto(rFinalBoss_3);
        }
        with (objBullet){
            explode = false;
            instance_destroy();
        }
        with (objGeneralNonkiller)
            instance_destroy();
        with (objMakerCirclePart)
            instance_destroy();
        depth = -351;
        break;
    case 85:
        if (instance_exists(blackFade))
            blackFade.fade = 1;
        instance_destroy(objMakerCirclePart);
        
        if (!instance_exists(objFinalP3Player)){
           instance_create(x, y, objFinalP3Player);
        }
        event_perform(ev_alarm, 1);  // Autosave
        
        instance_create(0, 0, objSingleJumpFlash);
        audio_play_sound(sndLoseStar, 0, false);
        
        tile_layer_delete(-6);
        with (objFinalBossHP)
            currentHPVal = 3;
        with (objTilesToSurf)
            reload = true;
        with (objBlock)
            instance_destroy();
        instance_destroy();
        break
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (persistent){
    if (room == rFinalBoss_3){
        persistent = false;
        
        // black fade-in
        blackFade = instance_create(0, 0, objScreenFade);
        with (blackFade){
            alpha = 1;
            fade = 0;
            color = c_black;
            fadeOut = 1/10;
            depth = -20;
        }
        
        // set up for transition
        with (objFinalBossDraw){
            undertale = true;
        }
        with (objPlayer){
            instance_destroy();
        }
        with (objPlayerStart){
            instance_destroy();
        }
        with (objFinalP3Player){
            instance_destroy();
        }
        with (objMakerBossSave){
            instance_destroy();
        }
    }else{
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (timer &gt;= 51 &amp;&amp; timer &lt;= 85 &amp;&amp; drawHeart){
    draw_sprite_ext(sprMakerHeartBlueYellow, image_index, x, y, image_xscale, -image_yscale, 11.25*sin(global.count*pi/36), c_white, 1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
