<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMrScribbleFaceless</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Shared Variables

// Taking Damage
iframes = 0;
iframesWhenHit = 15;
storedHit = false;
currentHPVal = -1;  // which index in the array to read from and write to  --  overwritten in children

//Visual effects
surf = -4;
glowSurf = -4;
auraGlowOffset = 0;
auraGlowAng = -pi/2;
auraScaleMult = 0;
alphaMult = 1;
trailPieces = 0;
trailPieceMax = 20;
trailPieceMaxInit = trailPieceMax;
for (var i=trailPieceMax-1; i &gt;= 0; i--;){
    trailX[i] = -100;
    trailY[i] = -100;
    trailScale[i] = 1;
}
outlinePieces = 0;
drawXOff = 0;
drawYOff = 0;
glowAlpha = 0;
image_speed = 0;
imgSpd = 1/5;
facelessSprite = sprMrScribbleFaceless;

//RNG Die
if (instance_exists(objFinalBossCutsceneDie)){
    with(objFinalBossCutsceneDie){
        var _inst = instance_create(x, y, objFinalRNGDie);
        _inst.appearLerp = appearLerp;
        _inst.grow = grow;
        _inst.shrink = shrink;
    }
}

if (!instance_exists(objFinalRNGDie)){
    var _inst = instance_create(x, y, objFinalRNGDie);
    _inst.latchedOn = true;
    _inst.appearLerp = 0;
}
with (objFinalRNGDie){
    targetObj = other.id;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (surface_exists(surf))
    surface_free(surf);
    
if (surface_exists(glowSurf))
    surface_free(glowSurf);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Make the object slightly transparent when invincible
if (iframes &gt;= 0){
    if (iframes &gt; iframesWhenHit/2)
        alphaMult = 0.5;
    else
        alphaMult = lerp(1, 0.5, iframes / (iframesWhenHit/2));
}else{
    alphaMult = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Manage Visual Effects
//Visual effects
if (outlinePieces &lt; 10)
    outlinePieces = min(outlinePieces+0.5, 10);

if (trailPieces &lt; trailPieceMax)
    trailPieces = min(trailPieces+1, trailPieceMax);

for (var i=trailPieces-1; i &gt; 0; i--){
    trailX[i] = trailX[i-1];
    trailY[i] = trailY[i-1];
    trailScale[i] = trailScale[i-1];
}
trailX[0] = x;
trailY[0] = y;
trailScale[0] = image_xscale;

auraGlowAng += pi/40;
auraGlowOffset = (sin(auraGlowAng)/2 + 0.5);
if (auraScaleMult &lt; 1){
    auraScaleMult = min(auraScaleMult+0.025, 1);
}

scrFinalCalcGlowAlpha(0.05, 0.1);

image_index = global.count*imgSpd;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Iframe generousity
if (iframes &gt; 0){
    iframes --;
    var _hp; _hp = scrFinalGetHP(currentHPVal);
    if (iframes &lt;= 0 &amp;&amp; storedHit &amp;&amp; _hp &gt; 1){
        scrFinalScribbleDamage();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw trail and aura
for (var i=trailPieces-1; i&gt;=0; i--){
    draw_sprite_ext(facelessSprite, image_index - imgSpd*(i+1), trailX[i], trailY[i], trailScale[i]*(1 - i/trailPieceMax), trailScale[i]*(1 - i/trailPieceMax), 0, c_gray, 0.4 * sqr(image_alpha * alphaMult));
}

var _backAuraNum = 5;
var _backAuraAlpha;
for (var i=0; i&lt;_backAuraNum; i++){
    _backAuraAlpha = ((sin(auraGlowAng - (2*pi * i/_backAuraNum))/2 + 0.5) + auraGlowOffset * 0.2) * auraScaleMult;
    draw_sprite_ext(facelessSprite, image_index, x, y, abs(image_xscale) * (1 + 0.25*_backAuraAlpha), abs(image_yscale) * (1 + 0.25*_backAuraAlpha), 0, image_blend, image_alpha * (0.1 + 0.2*_backAuraAlpha) * alphaMult);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (surface_exists(surf))
    surface_free(surf);
    
if (surface_exists(glowSurf))
    surface_free(glowSurf);

audio_stop_sound(sndMakerSampleThrowPersistent);  // used only for Phases 1 and 3
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!surface_exists(surf)){
    surf = surface_create(512, 512);
}

var _faceCol;
if (facelessSprite == sprMrScribbleFacelessUndertale){
    _faceCol = c_black;
}else{
    _faceCol = image_blend;
}

event_user(4);
if (surface_exists(surf)){
    surface_set_target(surf);
    draw_clear_alpha(c_black, 0);
    for(var i=outlinePieces-1;i&gt;0;i--){
        draw_sprite_ext(facelessSprite, image_index, 256, 256, image_xscale*(1 + i/50), image_yscale*(1 + i/50), 0, image_blend, (1 - i/outlinePieces));
    }
    draw_sprite_ext(facelessSprite, image_index, 256, 256, image_xscale, image_yscale, 0, image_blend, 1);
    draw_sprite_ext(sprMrScribbleFace, image_index, 256, 256, image_xscale, image_yscale, 0, _faceCol, 1);
    
    surface_reset_target();
    
    draw_surface_ext(surf, x-256, y-256, 1, 1, 0, c_white, image_alpha * alphaMult);
    
    if (global.finalGlowEnabled &amp;&amp; global.extraEffects &amp;&amp; drawXOff == 0){
        if (surface_exists(surf)){
            surface_set_target(surf);
            draw_clear_alpha(c_black, 0);
            draw_sprite_ext(sprMrScribbleFaceless, image_index, 256, 256, image_xscale, image_yscale, 0, image_blend, 1);  // both Scribble sprites have the same hitbox
            surface_reset_target();
            
            if (glowAlpha &gt; 0 &amp;&amp; surface_exists(surf)){
                shader_set(shdFinalWhite);
                shader_set_uniform_f(global.finalGlowHandle, 512, 512, 10, glowAlpha * image_alpha * alphaMult);
                draw_surface(surf, x-256, y-256);
                shader_reset();
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
