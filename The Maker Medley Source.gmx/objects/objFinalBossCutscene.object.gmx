<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMrScribble</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-30</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>movementTimer = 0;
active = false;
hoverTimer = 0;
image_speed = 0.2;
skipping = false;
with (objMakerBossSave){
    instance_destroy();
}
alarm[2] = 1;  //freeze player
x = 400;
y = -240;
ystart = y;
destY = 240;

//Visual effects
surf = -4;
glowSurf = -4;
auraGlowOffset = 0;
auraGlowAng = -pi/2;
auraScaleMult = 0;
alphaMult = 1;
trailPieceMax = 20;
trailPieces = 0;
for (var i=trailPieceMax-1; i &gt;= 0; i--){
    trailX[i] = -100;
    trailY[i] = -100;
    trailScale[i] = 1;
}
outlinePieces = 0;
glowAlpha = 0;
image_speed = 0;

global.farthestRoom = max(global.farthestRoom, scrGetRoomNum(room));      
scrTMM_Autosave(401, 371, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.canRestart = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///freeze player
with (objPlayer){
    frozen = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create RNG icon
var _inst = instance_create(x, y, objFinalBossCutsceneDie);
_inst.grow = true;
_inst.shrink = false;
audio_play_sound(sndFinalRNGPowerUp, 0, 0);

with (objCutsceneCamera){
    targetObject = objFinalBossCutsceneDie;
    //var _width;
    //_width = viewWTo;
    event_user(0);
    //viewWTo = _width; //Pan upwards without changing the width.
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create dialogue object
(instance_create(0, -115, objGeneralDialogue)).control = id;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (movementTimer &lt; 100){
    movementTimer ++;
    if (movementTimer &gt;= 100){
        movementTimer = 100;
        alarm[0] = 40;
        with (objMakerCutsceneSkip){disappear = true;}
    }
    y = lerp(ystart, destY, sin(pi/2*movementTimer/100));
}
if (movementTimer &gt;= 100 &amp;&amp; !skipping &amp;&amp; scrButtonCheckPressed(global.skipButton)){
    with (objGeneralDialogue){
        event_perform(ev_alarm, 2);
        if (lerpVal == 0){
            instance_destroy();
        }else{
            text = "Then enough talk.#Have at you!";
            textLength = string_length(text);
            textPosition = textLength;
            speakerSprite = sprScribbleDialogue;
            subMessage = -1;
        }
    }
    
    instance_destroy(objFinalBossCutsceneDie);
    alarm[0] = -1;
    alarm[1] = -1;
    y = destY;
    
    event_user(0);
    skipping = true;  // not necessary but idc
}

//Visual effects
if (outlinePieces &lt; 10){
    outlinePieces = min(outlinePieces+0.5, 10);
}

if (trailPieces &lt; trailPieceMax){
    trailPieces = min(trailPieces+1, trailPieceMax);
}
for (var i=trailPieces-1; i &gt; 0; i--){
    trailX[i] = trailX[i-1];
    trailY[i] = trailY[i-1];
    trailScale[i] = trailScale[i-1];
}
trailX[0] = x;
trailY[0] = y;

auraGlowAng += pi/40;
auraGlowOffset = (sin(auraGlowAng)/2 + 0.5);
if (auraScaleMult &lt; 1){
    auraScaleMult = min(auraScaleMult+0.025, 1);
}

if (instance_exists(objFinalBossCutsceneDie) &amp;&amp; objFinalBossCutsceneDie.appearLerp &lt; 0.1){
    if (glowAlpha &lt; 1){
        glowAlpha = min(glowAlpha+0.05, 1);
    }
}else{
    if (glowAlpha &gt; 0){
        glowAlpha = max(glowAlpha-0.10, 0);
    }
}
image_index = global.count/5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Begin Final Boss
with (objPlayer){
    frozen = false;
}
with (objMakerCutsceneSkip){disappear = true;}
global.farthestRoom = max(global.farthestRoom, scrGetRoomNum(room));
if (global.defaultBuffed){
    global.challengeMode = canBuff();
}     

// Save, then add Ctrl
scrSaveGame(true);
instance_create(x, y, objFinalBossCtrl); //(x, y) positioning is necessary for objFinalBossChar_1 to spawn in the correct position
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.canRestart = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
